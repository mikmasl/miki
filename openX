#Dzien dobry. Tutaj umiescilem kod w Python3.7, ktory wykonuje zadanie drugie w wyslanym przez Pani zestawie

import requests
import numpy as np
from math import sin, cos, sqrt, atan2, radians, pi

############################################# 1 - pobieranie informacji o postach i uzytkownikach z serwera

response = requests.get('https://jsonplaceholder.typicode.com/posts')
posts = response.json()

response = requests.get('https://jsonplaceholder.typicode.com/users')
users = response.json()

############################################ laczenie pobranej informacji
numberOFposts = len(posts)

i=0
while i<numberOFposts:
    USERid = posts[i].get("userId")
    postID = "post %i" % posts[i].get("id")
    users[USERid-1][postID]={"title": posts[i].get("title"), "body": posts[i].get("body"),}
    i+=1
### w 'users' teraz znajduja sie informacje o uzytkowniku i jego postach
############################################ 2 - obliczenie ilosci postow, napisanych przez uzytkownika

numberOFusers = len(users)

posts_cout = np.zeros(numberOFusers, dtype=np.int32)

i=0
while i<numberOFposts:
    USERid = posts[i].get("userId")
    posts_cout[USERid-1]+=1
    i+=1

i=0
listOFstrings=[]
while i<numberOFusers:
    message = "%s napisał(a) %i postów" % (users[i].get("name"), posts_cout[i])
    listOFstrings.append(message)
    i+=1
### 'listOFstrings' jest lista, w ktorej zostaly umieszczone informacje o uzytkowniku i ilosci jego postow    
############################################ 3 - okreslenie postow nieunikalnych

i=0
listOFnonUNIQUE=[]
while i<numberOFposts:
    TITLE = posts[i].get("title")
    listOFnonUNIQUE.append(TITLE)
    i+=1
listOFnonUNIQUE = list({x for x in listOFnonUNIQUE if listOFnonUNIQUE.count(x) > 1})

### 'listOFnonUNIQUE' jest lista, w ktorej zostaly umieszczone nieunikalne tytuly - widocznie takich nie ma
############################################ 4 - okreslenie najblizszych uzytkowikow
i=0
GEO = np.zeros((2, numberOFusers))

while i<numberOFusers:
    GEO[0,i] = float(users[i]["address"]["geo"].get("lat")) #fi
    GEO[1,i] = float(users[i]["address"]["geo"].get("lng")) #lambda
    i+=1

neighbours = []
R = 6373.0

for i in range(numberOFusers):
    MINdistance = 2*pi*R;
    k=0;
    for j in range(numberOFusers):
        if i!=j:
            lat1 = radians(GEO[0,i])
            lon1 = radians(GEO[1,i])
            lat2 = radians(GEO[0,j])
            lon2 = radians(GEO[1,j])
            
            dlon = lon2 - lon1
            dlat = lat2 - lat1
            a = (sin(dlat/2))**2 + cos(lat1) * cos(lat2) * (sin(dlon/2))**2
            c = 2 * atan2(sqrt(a), sqrt(1-a))
            distance = R * c

            if distance<MINdistance:
                MINdistance=distance
                k=j
    neighbours.append(users[k].get("name"))
### w 'neighbours' zostalo umieszczone imie najblizszego uzytkownika - dla osoby 
### o userID = 1, najblizszy uzytkownik jest pierwszy na liscie, dla osoby o userID = 2 - drugi, i t.d.
